kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: nas-pvc
---
apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: builder-trainer-
spec:
  entrypoint: builder-trainer
  arguments:
    parameters:
    - name: repo
      value: github.com/TaylorHere/bi-lstm-crf-ner-tf2.0.git
    - name: registry
      value: registry.cn-hangzhou.aliyuncs.com
    - name: project
      value: taylor
    - name: image
      value: crf
    - name: dockerfile
      value: Dockerfile
    - name: train-data-mount-path
      value: /home/jovyan/shared/
    - name: gpu-type
      value: T4
    - name: gpu-limits
      value: 1
  volumes:
    - name: workdir
      persistentVolumeClaim:
        claimName: nas-pvc
    - name: kaniko-secret
      secret:
        secretName: kaniko-secret

  templates:
    - name: builder-trainer
      steps:
          - - name: builder
              template: builder
          - - name: submit-trainer-gpu
              template: submit-trainer-gpu

    - name: builder
      retryStrategy: {}
      container:
        image: registry.cn-hangzhou.aliyuncs.com/taylor/kaniko:latest
        args: [
          "--dockerfile={{workflow.parameters.dockerfile}}",
          "--context=git://{{workflow.parameters.repo}}",
          "--destination={{workflow.parameters.registry}}/{{workflow.parameters.project}}/{{workflow.parameters.image}}:{{workflow.name}}",
          "--cache=true",
          "--cache-dir=/tmp/builder/cache"
        ]
        volumeMounts:
          - name: kaniko-secret
            mountPath: /secret
          - name: workdir
            mountPath: /tmp/
        env:
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /secret/kaniko-secret.json

    - name: submit-trainer-gpu
      resource:
        action: create
        successCondition: status.succeeded > 0
        failureCondition: status.failed > 0
        manifest: |
            apiVersion: batch/v1
            kind: Job
            metadata:
                generateName: trainer-job-
                ownerReferences:
                - apiVersion: argoproj.io/v1alpha1
                  blockOwnerDeletion: true
                  kind: Workflow
                  name: "{{workflow.name}}"
                  uid: "{{workflow.uid}}"
            spec:
              template:
                metadata:
                  annotations:
                    k8s.aliyun.com/eci-gpu-type : "{{workflow.parameters.gpu-type}}"
                  name: trainer-job
                spec:
                  restartPolicy: Never
                  volumes:
                    - name: workdir
                      persistentVolumeClaim:
                        claimName: nas-pvc
                  containers:
                  - name: trainer-job
                    imagePullPolicy: IfNotPresent
                    resources:
                      limits:
                          nvidia.com/gpu: "{{workflow.parameters.gpu-limits}}"
                    image: "{{workflow.parameters.image}}:{{workflow.name}}"
                    command:
                      - python
                      - train.py
                    volumeMounts:
                      - name: workdir
                        mountPath: "{{workflow.parameters.train-data-mount-path}}"
